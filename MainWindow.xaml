<Window x:Class="Text2TreeTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Text2TreeTool"
        xmlns:editors="http://schemas.syncfusion.com/wpf"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        KeyUp="MainWindow_OnKeyUp"
        mc:Ignorable="d"
        Title="TabADTool" Height="800" Icon="/Icons/tabattackicon.ico" Width="1300">
    <Window.DataContext>
        <local:EachNode />

    </Window.DataContext>


    <Window.Resources>
        <ResourceDictionary>
            <!--Resource Dictionary which contains predefined shapes for Node-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Syncfusion.SfDiagram.Wpf;component/Resources/BasicShapes.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--Style for Node-->
            <!-- <Style TargetType="syncfusion:Node"> -->
            <!--     <Setter Property="ShapeStyle"> -->
            <!--         <Setter.Value> -->
            <!--             <Style TargetType="Path"> -->
            <!--                 <Setter Property="Stretch" Value="Fill" /> -->
            <!--                 <Setter Property="Fill" Value="DarkRed" /> -->
            <!--             </Style> -->
            <!--         </Setter.Value> -->
            <!--     </Setter> -->
            <!-- </Style> -->


            <!--Style for Connector-->
            <!-- <Style TargetType="syncfusion:Connector"> -->
            <!--     <Setter Property="TargetDecoratorStyle"> -->
            <!--         <Setter.Value> -->
            <!--             <Style TargetType="Path"> -->
            <!--                 <Setter Property="Stretch" Value="Fill" /> -->
            <!--                 <Setter Property="Fill" Value="DeepPink" /> -->
            <!--                 ~1~ <Setter Property="" /> @1@ -->
            <!--                 <Setter Property="Stroke" Value="DeepPink" /> -->
            <!--                 <Setter Property="StrokeThickness" Value="2" /> -->
            <!--                 ~1~ <Style.Triggers> @1@ -->
            <!--                 ~1~     <DataTrigger Binding="{Binding Name}" Value="Fruits"> @1@ -->
            <!--                 ~1~         <Setter Property="Stretch" Value="Fill"/> @1@ -->
            <!--                 ~1~         <Setter Property="Fill" Value="Orange"/> @1@ -->
            <!--                 ~1~         ~2~ <Setter Property="" /> @2@ @1@ -->
            <!--                 ~1~         <Setter Property="Stroke" Value="Orange"/> @1@ -->
            <!--                 ~1~         <Setter Property="StrokeThickness" Value="2"/> @1@ -->
            <!--                 ~1~     </DataTrigger> @1@ -->
            <!--                 ~1~     <DataTrigger Binding="{Binding IsAndNode}" Value="False"> @1@ -->
            <!--                 ~1~         <Setter Property="Stretch" Value="Fill"/> @1@ -->
            <!--                 ~1~         <Setter Property="Fill" Value="Pink"/> @1@ -->
            <!--                 ~1~         ~2~ <Setter Property="" /> @2@ @1@ -->
            <!--                 ~1~         <Setter Property="Stroke" Value="Pink"/> @1@ -->
            <!--                 ~1~         <Setter Property="StrokeThickness" Value="2"/> @1@ -->
            <!--                 ~1~     </DataTrigger> @1@ -->
            <!--                 ~1~ </Style.Triggers> @1@ -->
            <!--             </Style> -->
            <!--         </Setter.Value> -->
            <!--     </Setter> -->
            <!-- </Style> -->

            <!--Style for Symbol-->
            <Style TargetType="syncfusion:Symbol">
                <Setter Property="Width" Value="50" />
                <Setter Property="Height" Value="50" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Margin" Value="4" />
            </Style>

            <!-- <DataTemplate DataType="{x:Type local:EachNode}"> -->
            <!--     <Border BorderThickness="2" Padding="8 11 8 11"> -->
            <!--         <Border.Style> -->
            <!--             <Style TargetType="Border"> -->
            <!--                 <Setter Property="BorderBrush" Value="DarkGray" /> -->
            <!--                 <Style.Triggers> -->
            <!--                     <DataTrigger Binding="{Binding IsParentAndNode}" Value="True"> -->
            <!--                         <Setter Property="BorderBrush" Value="Red" /> -->
            <!--                         <Setter Property="CornerRadius" Value="40"></Setter> -->
            <!--                     </DataTrigger> -->
            <!--                     <DataTrigger Binding="{Binding IsParentAndNode}" Value="False"> -->
            <!--                         <Setter Property="BorderBrush" Value="LightSteelBlue" /> -->
            <!--                         <Setter Property="CornerRadius" Value="40"></Setter> -->
            <!--                     </DataTrigger> -->
            <!--                     <DataTrigger Binding="{Binding IsDefenceNode}" Value="True"> -->
            <!--                         <Setter Property="BorderBrush" Value="LawnGreen" /> -->
            <!--                         <Setter Property="CornerRadius" Value="2"></Setter> -->
            <!--                     </DataTrigger> -->
            <!--                 </Style.Triggers> -->
            <!--             </Style> -->
            <!--         </Border.Style> -->
            <!--         <StackPanel> -->
            <!--             <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="Blue"/> -->
            <!--             <Path x:Name="ArcPath" Stroke="Red" StrokeThickness="2" Visibility="Collapsed"> -->
            <!--                 <Path.Data> -->
            <!--                     <PathGeometry> -->
            <!--                         <PathFigure StartPoint="0.5,1"> -->
            <!--                             <ArcSegment Point="1,0" Size="1,1" RotationAngle="180" IsLargeArc="False"/> -->
            <!--                         </PathFigure> -->
            <!--                     </PathGeometry> -->
            <!--                 </Path.Data> -->
            <!--             </Path> -->
            <!--         </StackPanel> -->
            <!--     </Border> -->
            <!--     <DataTemplate.Triggers> -->
            <!--         <DataTrigger Binding="{Binding IsAndNode}" Value="True"> -->
            <!--             <Setter TargetName="ArcPath" Property="Visibility" Value="Visible"/> -->
            <!--         </DataTrigger> -->
            <!--     </DataTemplate.Triggers> -->
            <!-- </DataTemplate> -->

            <!-- <DataTemplate DataType="{x:Type local:EachNode}"> -->
            <!--     <Border BorderThickness="2" Padding="8 11 8 11"> -->
            <!--         <Border.Style> -->
            <!--             <Style TargetType="Border"> -->
            <!--                 <Setter Property="BorderBrush" Value="DarkGray" /> -->
            <!--                 <Style.Triggers> -->
            <!--                     <DataTrigger Binding="{Binding IsParentAndNode}" Value="True"> -->
            <!--                         <Setter Property="BorderBrush" Value="Red" /> -->
            <!--                         <Setter Property="CornerRadius" Value="40"></Setter> -->
            <!--                     </DataTrigger> -->
            <!--                     <DataTrigger Binding="{Binding IsParentAndNode}" Value="False"> -->
            <!--                         <Setter Property="BorderBrush" Value="LightSteelBlue" /> -->
            <!--                         <Setter Property="CornerRadius" Value="40"></Setter> -->
            <!--                     </DataTrigger> -->
            <!--                     <DataTrigger Binding="{Binding IsDefenceNode}" Value="True"> -->
            <!--                         <Setter Property="BorderBrush" Value="LawnGreen" /> -->
            <!--                         <Setter Property="CornerRadius" Value="2"></Setter> -->
            <!--                     </DataTrigger> -->
            <!--                 </Style.Triggers> -->
            <!--             </Style> -->
            <!--         </Border.Style> -->
            <!--         <StackPanel> -->
            <!--             <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="Blue"/> -->
            <!--             <Path x:Name="ArcPath" Stroke="Red" StrokeThickness="2" Visibility="Collapsed"> -->
            <!--                 <Path.Data> -->
            <!--                     <PathGeometry> -->
            <!--                         <PathFigure StartPoint="0.5,1"> -->
            <!--                             <ArcSegment Point="1,0" Size="1,1" RotationAngle="180" IsLargeArc="False"/> -->
            <!--                         </PathFigure> -->
            <!--                     </PathGeometry> -->
            <!--                 </Path.Data> -->
            <!--             </Path> -->
            <!--         </StackPanel> -->
            <!--     </Border> -->
            <!--     <DataTemplate.Triggers> -->
            <!--         <DataTrigger Binding="{Binding IsAndNode}" Value="True"> -->
            <!--             <Setter TargetName="ArcPath" Property="Visibility" Value="Visible"/> -->
            <!--         </DataTrigger> -->
            <!--     </DataTemplate.Triggers> -->
            <!-- </DataTemplate> -->


            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <DataTemplate DataType="{x:Type local:EachNode}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" /> <!-- Node content, auto-sizing based on content -->
                        <RowDefinition Height="Auto" /> <!-- Space for the arc -->
                    </Grid.RowDefinitions>

                    <!-- Node content within a bordered container -->
                    <Border x:Name="NodeBorder" Grid.Row="0" BorderThickness="2" Padding="3" Background="White">
                        <!-- Node text -->
                        <TextBlock Text="{Binding Name}" Width="100" TextAlignment="Center" FontWeight="Bold"
                                   Foreground="DarkBlue" HorizontalAlignment="Center" TextWrapping="Wrap" />

                        <!-- Styling for the Border based on node type -->
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderBrush" Value="SteelBlue" />
                                <Setter Property="CornerRadius" Value="15"></Setter>
                                <Style.Triggers>
                                    <!-- <DataTrigger Binding="{Binding IsParentAndNode}" Value="True"> -->
                                    <!--     <Setter Property="BorderBrush" Value="Red"/> -->
                                    <!-- </DataTrigger> -->
                                    <DataTrigger Binding="{Binding IsDefenceNode}" Value="True">
                                        <Setter Property="BorderBrush" Value="LawnGreen" />
                                        <Setter Property="CornerRadius" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <!-- Arc positioned below the bordered node content -->
                    <Path x:Name="ArcPath" Grid.Row="1" Stroke="Black" StrokeThickness="2" Margin="8,-2,8,0"
                          HorizontalAlignment="Stretch"
                          Visibility="{Binding IsAndNode, Converter={StaticResource BoolToVis}}">
                        <Path.Data>
                            <PathGeometry x:Name="ArcGeometry">
                                <PathFigure StartPoint="0,0" IsClosed="False">
                                    <ArcSegment x:Name="ArcSegment" Point="50,0" Size="25,25"
                                                SweepDirection="Counterclockwise" />
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Grid>
            </DataTemplate>


        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="Grid1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="1.5*" />
            <!-- <ColumnDefinition Width="0.5*"/> -->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Grid.ColumnSpan="3">
            <Menu DockPanel.Dock="Top" Padding="2 6 0 6" FontSize="14" Background="LightBlue">
                <MenuItem Header="_File" Click="MenuItem_Click_1" Padding="4" Margin="0 0 10 0">
                    <MenuItem Header="_New Attack Tree" Click="NewAttackItem_OnClick" />
                    <MenuItem Header="_Import (.txt)" Click="ImportMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="_Save" Click="SaveMenuItem_Click" />
                    <MenuItem Header="_Save As (.txt)" Click="SaveAsMenuItem_Click" />
                    <MenuItem Header="_Export">
                        <MenuItem Header="_PNG" Click="MenuItem_PNGClick" />
                        <MenuItem Header="_JPEG" Click="MenuItem_JPEGClick" />
                        <MenuItem Header="_TIFF" Click="MenuItem_TIFFClick" />
                        <MenuItem Header="_GIF" Click="MenuItem_GIFClick" />
                        <MenuItem Header="_BMP" Click="MenuItem_BMPClick" />
                        <MenuItem Header="_WDP" Click="MenuItem_WDPClick" />
                    </MenuItem>
                    <MenuItem Header="_Print" Click="MenuItem_OnClic" />
                    <Separator />
                    <MenuItem Header="_Exit" Click="closeButton_Click" />
                </MenuItem>
                <MenuItem Header="_View" Click="MenuItem_Click" Padding="4" Margin="0 0 10 0">
                    <MenuItem Header="_Zoom in" Click="ButtonZoomIn_OnClick" />
                    <MenuItem Header="_Zoom out" Click="ButtonZoomOut_OnClick" />
                    <MenuItem Header="Full screen" x:Name="FullScreenButton" Click="ButtonFullScreen_OnClick"></MenuItem>
                </MenuItem>
                <MenuItem Header="_Actions" Click="MenuItem_Click" Padding="4" Margin="0 0 10 0">
                    <MenuItem Header="_Undo" Command="ApplicationCommands.Undo" />
                    <MenuItem Header="_Redo" Command="ApplicationCommands.Redo" />
                </MenuItem>
                <MenuItem Header="_Help" Padding="4">
                    <MenuItem Header="_Sample Trees" Click="MenuItem_OnClick" />
                    <MenuItem Header="_About" Click="AboutItem_Click" />
                </MenuItem>
            </Menu>
        </DockPanel>
        <Button Grid.Row="0" Grid.Column="1" Margin="0 0 3 0 " Padding="0 0 0 0" Content="Generate Tree" Height="30"
                Background="DeepSkyBlue" Foreground="White" BorderThickness="0"
                Width="100" HorizontalAlignment="Right" VerticalAlignment="Center"
                Click="ButtonGenerateTree_OnClick" FontWeight="Bold">
        </Button>
        <!-- <Button Content="Fullscreen" x:Name="FullScreenButton" Padding="4 2 4 2" Margin="4 4 4 4 " Background="DarkTurquoise" HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1" Click="ButtonFullScreen_OnClick"/> -->
        <!-- <syncfusion:EditControl EnableOutlining="True" BorderThickness="2" BorderBrush="CornflowerBlue" Name="ATdescription" LineNumberAreaWidth="30.0" IsAutoLineNumberAreaWidthEnabled="False" LineNumberAreaBackground="LightCyan" Background="WhiteSmoke" Grid.Row="2" Foreground="DarkBlue" TabKeyBehavior="Default"  Grid.RowSpan="1" Grid.Column="1" FontSize="16" > -->
        <!--     <syncfusion:EditControl.StatusBarSettings> -->
        <!--         <syncfusion:StatusBarSettings Visibility="Visible" ShowFilePath="Visible" ShowLineNumber="Visible" ShowColumnNumber="Visible" ShowEncoding="Collapsed"/> -->
        <!--     </syncfusion:EditControl.StatusBarSettings> -->
        <!-- </syncfusion:EditControl> -->
        <TextBox Grid.Row="2" Grid.Column="1" Name="ATdescription" AcceptsReturn="True" AcceptsTab="True" FontSize="16"
                 Foreground="DarkBlue">
        </TextBox>

        <!-- <TextBox Grid.Column="1" Grid.Row="1" AcceptsReturn="True"/> -->
        <TextBlock Grid.Row="2" Grid.Column="0" Name="LineCountTextBlock" />
        <Label Grid.Row="1" Grid.Column="1" Background="#bdecfc" Padding="5  5 5 5" HorizontalAlignment="Left"
               Margin="4 5 5 5" Content="Text View" FontSize="14" FontWeight="Medium" />
        <Label Grid.Row="1" Grid.Column="2" Background="#bdecfc" HorizontalAlignment="Center" Margin="2 5 5 5"
               Padding="5 5 5 5"
               Content="Tree View" FontSize="14" FontStretch="SemiCondensed" FontWeight="Medium" />
        <StackPanel Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal">

            <Button Click="ButtonZoomIn_OnClick" Padding="3" Background="Snow" BorderThickness="0">
                <!-- <StackPanel Orientation="Horizontal"> -->
                <svgc:SvgViewbox Source="/Icons/zoom-in-alt-svgrepo-com.svg" Width="25" Height="20"></svgc:SvgViewbox>
                <!-- <TextBlock Text="Zoom in" VerticalAlignment="Center" /> -->
                <!-- </StackPanel> -->
            </Button>
            <Button Click="ButtonZoomOut_OnClick" Background="Snow" Padding="3" BorderThickness="0">
                <svgc:SvgViewbox Source="/Icons/zoom-out-alt-1-svgrepo-com.svg" Width="25" Height="20"></svgc:SvgViewbox>
            </Button>
        </StackPanel>
        <syncfusion:SfDiagram BorderBrush="CornflowerBlue" x:Name="Diagram" Grid.Row="2" DefaultConnectorType="Line"
                              Grid.Column="2"
                              Grid.RowSpan="2">

        </syncfusion:SfDiagram>

        <TextBox Grid.Row="3" AcceptsReturn="True" x:Name="SearchTermTextBox" Grid.Column="1" TextWrapping="Wrap"
                 Text="Message Console"
                 FontWeight="Bold" />


    </Grid>

</Window>